/* crypto/skf/skf_ex.h */
/* ====================================================================
 * Copyright (c) 2016 The GmSSL Project.  All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 *
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 *
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in
 *    the documentation and/or other materials provided with the
 *    distribution.
 *
 * 3. All advertising materials mentioning features or use of this
 *    software must display the following acknowledgment:
 *    "This product includes software developed by the GmSSL Project.
 *    (http://gmssl.org/)"
 *
 * 4. The name "GmSSL Project" must not be used to endorse or promote
 *    products derived from this software without prior written
 *    permission. For written permission, please contact
 *    guanzhi1980@gmail.com.
 *
 * 5. Products derived from this software may not be called "GmSSL"
 *    nor may "GmSSL" appear in their names without prior written
 *    permission of the GmSSL Project.
 *
 * 6. Redistributions of any form whatsoever must retain the following
 *    acknowledgment:
 *    "This product includes software developed by the GmSSL Project
 *    (http://gmssl.org/)"
 *
 * THIS SOFTWARE IS PROVIDED BY THE GmSSL PROJECT ``AS IS'' AND ANY
 * EXPRESSED OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
 * PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE GmSSL PROJECT OR
 * ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
 * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
 * NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
 * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
 * STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED
 * OF THE POSSIBILITY OF SUCH DAMAGE.
 * ====================================================================
 *
 */

#ifndef HEADER_SKF_EX_H
#define HEADER_SKF_EX_H

#include <openssl/ec.h>
#include <openssl/evp.h>
#include <openssl/sm2.h>
#include <openssl/cmac.h>
#include <openssl/cbcmac.h>
#include <openssl/ecdsa.h>
#include <openssl/skf.h>

#ifdef __cplusplus
extern "C" {
#endif

int SKF_print_dev_info(DEVINFO *devInfo);
char *SKF_get_alg_name(ULONG ulAlgID);
char *SKF_get_errstr(ULONG ulError);
int SKF_nid_to_encparams(int nid, ULONG *algID, BLOCKCIPHERPARAM *params);

RSA *RSA_new_from_RSAPUBLICKEYBLOB(const RSAPUBLICKEYBLOB *blob);
RSA *RSA_new_from_RSAPRIVATEKEYBLOB(const RSAPRIVATEKEYBLOB *blob);
int RSA_set_RSAPUBLICKEYBLOB(RSA *rsa, const RSAPUBLICKEYBLOB *blob);
int RSA_get_RSAPUBLICKEYBLOB(RSA *rsa, RSAPUBLICKEYBLOB *blob);
int RSA_set_RSAPRIVATEKEYBLOB(RSA *rsa, const RSAPRIVATEKEYBLOB *blob);
int RSA_get_RSAPRIVATEKEYBLOB(RSA *rsa, RSAPRIVATEKEYBLOB *blob);

ULONG DEVAPI SKF_GenExtECCKeyPair(DEVHANDLE hDev,
	ECCPRIVATEKEYBLOB *priKey,
	ECCPUBLICKEYBLOB *pubKey);

EC_KEY *EC_KEY_new_from_ECCPUBLICKEYBLOB(const ECCPUBLICKEYBLOB *blob);
EC_KEY *EC_KEY_new_from_ECCPRIVATEKEYBLOB(const ECCPRIVATEKEYBLOB *blob);
int EC_KEY_set_ECCPUBLICKEYBLOB(EC_KEY *ec_key, const ECCPUBLICKEYBLOB *blob);
int EC_KEY_get_ECCPUBLICKEYBLOB(EC_KEY *ec_key, ECCPUBLICKEYBLOB *blob);
int EC_KEY_set_ECCPRIVATEKEYBLOB(EC_KEY *ec_key, const ECCPRIVATEKEYBLOB *blob);
int EC_KEY_get_ECCPRIVATEKEYBLOB(EC_KEY *ec_key, ECCPRIVATEKEYBLOB *blob);

SM2_CIPHERTEXT_VALUE *SM2_CIPHERTEXT_VALUE_new_from_ECCCIPHERBLOB(const ECCCIPHERBLOB *blob);
int SM2_CIPHERTEXT_VALUE_set_ECCCIPHERBLOB(SM2_CIPHERTEXT_VALUE *cv, const ECCCIPHERBLOB *blob);
int SM2_CIPHERTEXT_VALUE_get_ECCCIPHERBLOB(const SM2_CIPHERTEXT_VALUE *cv, ECCCIPHERBLOB *blob);

ECDSA_SIG *ECDSA_SIG_new_from_ECCSIGNATUREBLOB(const ECCSIGNATUREBLOB *blob);
int ECDSA_SIG_get_ECCSIGNATUREBLOB(const ECDSA_SIG *sig, ECCSIGNATUREBLOB *blob);
int ECDSA_SIG_set_ECCSIGNATUREBLOB(ECDSA_SIG *sig, const ECCSIGNATUREBLOB *blob);


/* BEGIN ERROR CODES */
/*
 * The following lines are auto generated by the script mkerr.pl. Any changes
 * made after this point may be overwritten when the script is next run.
 */
void ERR_load_SKF_strings(void);

/* Error codes for the SKF functions. */

/* Function codes. */
# define SKF_F_ECDSA_SIG_GET_ECCSIGNATUREBLOB             143
# define SKF_F_ECDSA_SIG_NEW_FROM_ECCSIGNATUREBLOB        144
# define SKF_F_ECDSA_SIG_SET_ECCSIGNATUREBLOB             145
# define SKF_F_EC_KEY_GET_ECCPRIVATEKEYBLOB               155
# define SKF_F_EC_KEY_GET_ECCPUBLICKEYBLOB                156
# define SKF_F_EC_KEY_NEW_FROM_ECCPRIVATEKEYBLOB          146
# define SKF_F_EC_KEY_NEW_FROM_ECCPUBLICKEYBLOB           147
# define SKF_F_EC_KEY_SET_ECCPRIVATEKEYBLOB               157
# define SKF_F_EC_KEY_SET_ECCPUBLICKEYBLOB                158
# define SKF_F_RSA_GET_RSAPRIVATEKEYBLOB                  169
# define SKF_F_RSA_GET_RSAPUBLICKEYBLOB                   173
# define SKF_F_RSA_NEW_FROM_RSAPRIVATEKEYBLOB             163
# define SKF_F_RSA_NEW_FROM_RSAPUBLICKEYBLOB              164
# define SKF_F_RSA_SET_RSAPRIVATEKEYBLOB                  170
# define SKF_F_RSA_SET_RSAPUBLICKEYBLOB                   165
# define SKF_F_SKF_CHANGEDEVAUTHKEY                       100
# define SKF_F_SKF_CHANGEPIN                              101
# define SKF_F_SKF_CLEARSECURESTATE                       102
# define SKF_F_SKF_CLOSEHANDLE                            136
# define SKF_F_SKF_CONNECTDEV                             103
# define SKF_F_SKF_CREATEAPPLICATION                      104
# define SKF_F_SKF_CREATEFILE                             105
# define SKF_F_SKF_DECRYPT                                159
# define SKF_F_SKF_DECRYPTFINAL                           130
# define SKF_F_SKF_DECRYPTINIT                            160
# define SKF_F_SKF_DECRYPTUPDATE                          161
# define SKF_F_SKF_DELETEAPPLICATION                      106
# define SKF_F_SKF_DELETEFILE                             107
# define SKF_F_SKF_DEVAUTH                                108
# define SKF_F_SKF_DIGEST                                 137
# define SKF_F_SKF_DIGESTFINAL                            109
# define SKF_F_SKF_DIGESTINIT                             138
# define SKF_F_SKF_DIGESTUPDATE                           139
# define SKF_F_SKF_DISCONNECTDEV                          110
# define SKF_F_SKF_ENCRYPT                                162
# define SKF_F_SKF_ENCRYPTFINAL                           131
# define SKF_F_SKF_ENCRYPTINIT                            111
# define SKF_F_SKF_ENCRYPTUPDATE                          112
# define SKF_F_SKF_ENUMAPPLICATION                        113
# define SKF_F_SKF_ENUMDEV                                114
# define SKF_F_SKF_ENUMFILES                              115
# define SKF_F_SKF_EXTECCDECRYPT                          148
# define SKF_F_SKF_EXTECCENCRYPT                          149
# define SKF_F_SKF_EXTECCSIGN                             150
# define SKF_F_SKF_EXTECCVERIFY                           151
# define SKF_F_SKF_EXTRSAPRIKEYOPERATION                  166
# define SKF_F_SKF_EXTRSAPUBKEYOPERATION                  167
# define SKF_F_SKF_GENEXTECCKEYPAIR                       174
# define SKF_F_SKF_GENEXTRSAKEY                           132
# define SKF_F_SKF_GENRANDOM                              133
# define SKF_F_SKF_GETDEVINFO                             116
# define SKF_F_SKF_GETDEVSTATE                            117
# define SKF_F_SKF_GETFILEINFO                            118
# define SKF_F_SKF_GETPININFO                             119
# define SKF_F_SKF_HANDLE_GET_CBCMAC_CTX                  140
# define SKF_F_SKF_HANDLE_GET_CIPHER                      171
# define SKF_F_SKF_HANDLE_GET_CIPHER_CTX                  141
# define SKF_F_SKF_HANDLE_GET_KEY                         172
# define SKF_F_SKF_HANDLE_GET_MD_CTX                      142
# define SKF_F_SKF_LOCKDEV                                120
# define SKF_F_SKF_MAC                                    168
# define SKF_F_SKF_MACFINAL                               134
# define SKF_F_SKF_MACINIT                                121
# define SKF_F_SKF_MACUPDATE                              135
# define SKF_F_SKF_READFILE                               122
# define SKF_F_SKF_SETLABEL                               123
# define SKF_F_SKF_SETSYMMKEY                             124
# define SKF_F_SKF_TRANSMIT                               125
# define SKF_F_SKF_UNBLOCKPIN                             126
# define SKF_F_SKF_UNLOCKDEV                              127
# define SKF_F_SKF_VERIFYPIN                              128
# define SKF_F_SKF_WRITEFILE                              129
# define SKF_F_SM2_CIPHERTEXT_VALUE_GET_ECCCIPHERBLOB     152
# define SKF_F_SM2_CIPHERTEXT_VALUE_NEW_FROM_ECCCIPHERBLOB 153
# define SKF_F_SM2_CIPHERTEXT_VALUE_SET_ECCCIPHERBLOB     154

/* Reason codes. */
# define SKF_R_ALGOR_NOT_SUPPORTED                        100
# define SKF_R_BAD_ARGUMENT                               101
# define SKF_R_BUFFER_TOO_SMALL                           102
# define SKF_R_CMAC_LIB                                   103
# define SKF_R_CTX_NOT_CREATED                            121
# define SKF_R_DECODE_EC_PRIVATE_KEY_FAILED               131
# define SKF_R_DECODE_EC_PUBLIC_KEY_FAILED                132
# define SKF_R_DECRYPT_FAILED                             133
# define SKF_R_ENCODE_CIPHERTEXT_FAILED                   134
# define SKF_R_ENCODE_FAILED                              114
# define SKF_R_ENCODE_RSA_PUBLIC_KEY_FAILED               162
# define SKF_R_ENCODE_SIGNATURE_FAILED                    135
# define SKF_R_ENCRYPT_FAILED                             136
# define SKF_R_FAIL                                       104
# define SKF_R_FREE_HANDLE_FAILED                         128
# define SKF_R_GEN_RSA_FAILED                             115
# define SKF_R_GET_PRIVATE_KEY_FAILED                     164
# define SKF_R_GET_PUBLIC_KEY_FAILED                      165
# define SKF_R_INVALID_ALGID                              122
# define SKF_R_INVALID_ALGOR                              156
# define SKF_R_INVALID_APP_HANDLE                         105
# define SKF_R_INVALID_ARGUMENTS                          123
# define SKF_R_INVALID_BIGNUM_LENGTH                      137
# define SKF_R_INVALID_BLOB                               124
# define SKF_R_INVALID_CIPHERTEXT                         138
# define SKF_R_INVALID_CIPHERTEXT_LENGTH                  139
# define SKF_R_INVALID_CIPHERTEXT_MAC                     140
# define SKF_R_INVALID_CIPHERTEXT_POINT                   141
# define SKF_R_INVALID_CIPHER_CTX_HANDLE                  154
# define SKF_R_INVALID_DEV_HANDLE                         106
# define SKF_R_INVALID_DIGEST_LENGTH                      142
# define SKF_R_INVALID_ECC_PRIVATE_KEY                    143
# define SKF_R_INVALID_ECC_PUBLIC_KEY                     144
# define SKF_R_INVALID_EC_KEY                             151
# define SKF_R_INVALID_EC_PRIVATE_KEY                     145
# define SKF_R_INVALID_EC_PUBLIC_KEY                      146
# define SKF_R_INVALID_FEED_BIT_LENGTH                    160
# define SKF_R_INVALID_HANDLE                             107
# define SKF_R_INVALID_HANDLE_ALGOR                       161
# define SKF_R_INVALID_HANDLE_MAGIC                       125
# define SKF_R_INVALID_HANDLE_TYPE                        126
# define SKF_R_INVALID_HASH_HANDLE                        127
# define SKF_R_INVALID_ID_LENGTH                          129
# define SKF_R_INVALID_INPUT_LENGTH                       157
# define SKF_R_INVALID_IV_LENGTH                          108
# define SKF_R_INVALID_KEY_HANDLE                         116
# define SKF_R_INVALID_KEY_LENGTH                         117
# define SKF_R_INVALID_MAC_HANDLE                         118
# define SKF_R_INVALID_PLAINTEXT_LENGTH                   147
# define SKF_R_INVALID_PRIVATE_KEY                        152
# define SKF_R_INVALID_PUBLIC_KEY                         153
# define SKF_R_INVALID_RANDOM_LENGTH                      119
# define SKF_R_INVALID_RSA_KEY_LENGTH                     163
# define SKF_R_INVALID_RSA_PRIVATE_KEY                    158
# define SKF_R_INVALID_RSA_PUBLIC_KEY                     159
# define SKF_R_INVALID_SIGNATURE                          148
# define SKF_R_MALLOC_FAILED                              120
# define SKF_R_NO_PUBLIC_KEY                              130
# define SKF_R_NULL_ARGUMENT                              109
# define SKF_R_SAR_FAIL                                   110
# define SKF_R_SAR_OK                                     111
# define SKF_R_SET_CIPHER_CTX_FAILED                      155
# define SKF_R_SIGN_FAILED                                149
# define SKF_R_UNKNOWN_ALGOR                              112
# define SKF_R_UNKNOWN_APP                                113
# define SKF_R_VERIFY_NOT_PASS                            150

#ifdef  __cplusplus
}
#endif
#endif
